from typing import Any, Dict
from typing import List

from lowerpines.gmi import GMI


class AbstractManager:
    gmi = ... #  type: GMI
    _content = ... #  type: List[Any]

    def __len__(self) -> int: ...
    def __getitem__(self, key: int) -> Any: ...
    def __delitem__(self, key: int) -> None: ...
    def __setitem__(self, key: int, value: Any) -> None: ...
    def __iter__(self) -> Any: ...
    def __init__(self, gmi: GMI, content: List[Any]=None) -> None: ...
    def _all(self) -> List[Any]: ...
    def get(self, **kwargs: Dict[str, Any]) -> Any: ...
    def filter(self, **kwargs: Dict[str, Any]) -> List[Any]: ...
