from typing import Union, List, Optional

from lowerpines.endpoints import Request
from lowerpines.endpoints.group import Group
from lowerpines.gmi import GMI
from lowerpines.message import ComplexMessage


class Bot:
    gmi = ... #  type: GMI
    bot_id = ... #  type: str
    group_id = ... #  type: str
    name = ... #  type: str
    avatar_url = ... #  type: str
    callback_url = ... #  type: str
    dm_notification = ... #  type: bool

    def __init__(self, gmi: GMI, group_id: str=..., name: str=..., avatar_url: str=..., callback_url: str=..., dm_notification: bool=...) -> None: ...
    @property
    def group(self) -> Group: ...
    def save(self) -> None: ...
    def delete(self) -> None: ...
    def _refresh_from_other(self, other: 'Bot') -> None: ...
    def refresh(self) -> None: ...
    def post(self, text: Union[str, ComplexMessage]): ...
    @staticmethod
    def get_all(gmi: GMI) -> List['Bot']: ...
    @staticmethod
    def get(gmi: GMI, bot_id: str) -> 'Bot': ...
    @classmethod
    def from_json(cls, gmi: GMI, json: dict) -> 'Bot': ...
    def __str__(self) -> str: ...


class BotCreateRequest(Request):
    group_id = ... #  type: str
    name = ... #  type: str
    callback_url = ... #  type: str
    avatar_url = ... #  type: str
    dm_notification = ... #  type: bool

    def __init__(self, gmi: GMI, group_id: str, name: str, callback_url: str=..., avatar_url: str=..., dm_notification: bool=...) -> None: ...
    def parse(self, response: dict) -> Bot: ...
    def mode(self) -> str: ...
    def url(self) -> str: ...
    def args(self) -> dict: ...


class BotPostRequest(Request):
    bot_id = ... #  type: str
    text = ... #  type: str
    attachments = ... #  type: dict


    def __init__(self, gmi: GMI, bot_id: str, text: str, attachments: Optional[list]=...) -> None: ...
    def parse(self, response: dict) -> None: ...
    def args(self) -> dict: ...
    def mode(self) -> str: ...
    def url(self) -> str: ...


class BotIndexRequest(Request):
    def parse(self, response: dict) -> List[Bot]: ...
    def mode(self) -> str: ...
    def url(self) -> str: ...


class BotDestroyRequest(Request):
    bot_id = ... #  type: str

    def __init__(self, gmi: GMI, bot_id: str) -> None: ...
    def parse(self, response: dict) -> None: ...
    def mode(self) -> str: ...
    def url(self) -> str: ...
    def args(self) -> dict: ...


class BotsUpdateRequest(Request):
    bot_id = ... # type: str
    group_id = ... # type: str
    name = ... # type: str
    callback_url = ... # type: str
    avatar_url = ... # type: str
    dm_notification = ... # type: bool
    def __init__(self, gmi: GMI, bot_id: str, group_id: str=..., name: str=..., callback_url: str=..., avatar_url: str=..., dm_notification: bool=...) -> None: ...
    def url(self) -> str: ...
    def mode(self) -> str: ...
    def args(self) -> dict: ...
    def parse(self, response: dict) -> None: ...
